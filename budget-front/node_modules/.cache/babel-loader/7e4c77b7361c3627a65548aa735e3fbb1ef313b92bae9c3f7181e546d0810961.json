{"ast":null,"code":"var _jsxFileName = \"/home/edu/edu/repositorios/Budget-app/budget-front/src/components/BalanceCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, Paper, Typography, MenuItem, Select, FormControl, InputLabel } from \"@mui/material\";\nimport \"../styles/dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BalanceCard = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(\"\");\n  const [balance, setBalance] = useState(null);\n  const [currency, setCurrency] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const refreshToken = async () => {\n    try {\n      const refresh = localStorage.getItem(\"refresh_token\");\n      if (!refresh) throw new Error(\"No refresh token found!\");\n      const response = await fetch(\"http://127.0.0.1:8000/api/v1/auth/token/refresh/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          refresh\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to refresh token\");\n      const data = await response.json();\n      localStorage.setItem(\"access_token\", data.access);\n      return data.access;\n    } catch (error) {\n      console.error(\"Error refreshing token:\", error);\n      return null;\n    }\n  };\n  const fetchAccounts = async () => {\n    let token = localStorage.getItem(\"access_token\");\n    const fetchData = async token => {\n      return fetch(\"http://127.0.0.1:8000/api/v1/accounts/\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n    };\n    let response = await fetchData(token);\n    if (response.status === 401) {\n      token = await refreshToken();\n      if (token) {\n        response = await fetchData(token);\n      }\n    }\n    if (!response.ok) {\n      console.error(\"Error fetching accounts:\", response.status);\n      setAccounts([]);\n      setLoading(false);\n      return;\n    }\n    const data = await response.json();\n    if (data.results && Array.isArray(data.results) && data.results.length > 0) {\n      setAccounts(data.results);\n      setSelectedAccount(data.results[0].name);\n      fetchAccountBalance(data.results[0].name);\n    } else {\n      setAccounts([]);\n    }\n    setLoading(false);\n  };\n  const fetchAccountBalance = async accountName => {\n    setLoading(true);\n    let token = localStorage.getItem(\"access_token\");\n    const fetchData = async token => {\n      return fetch(`http://127.0.0.1:8000/api/v1/accounts/balance/${encodeURIComponent(accountName)}/`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n    };\n    let response = await fetchData(token);\n    if (response.status === 401) {\n      token = await refreshToken();\n      if (token) {\n        response = await fetchData(token);\n      }\n    }\n    if (!response.ok) {\n      console.error(\"Error fetching account balance:\", response.status);\n      setLoading(false);\n      return;\n    }\n    const data = await response.json();\n    setBalance(data.accountBalance);\n    setCurrency(data.currency);\n    setLoading(false);\n  };\n  const handleAccountChange = event => {\n    const newAccount = event.target.value;\n    setSelectedAccount(newAccount);\n    fetchAccountBalance(newAccount);\n  };\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      padding: 3,\n      textAlign: \"center\",\n      borderRadius: 2,\n      boxShadow: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Selecciona una cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedAccount || \"\",\n        onChange: handleAccountChange,\n        disabled: accounts.length === 0,\n        children: accounts.length > 0 ? accounts.map(account => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: account.name,\n          children: account.name\n        }, account.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          children: \"No accounts available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"primary\",\n      children: selectedAccount ? selectedAccount : \"Seleccione una cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      children: loading ? \"Cargando...\" : balance !== null ? `${balance.toLocaleString()} ${currency}` : \"Sin saldo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(BalanceCard, \"GUFspn9Q1LUwtQa+CkSUpApWnYk=\");\n_c = BalanceCard;\nexport default BalanceCard;\nvar _c;\n$RefreshReg$(_c, \"BalanceCard\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Paper","Typography","MenuItem","Select","FormControl","InputLabel","jsxDEV","_jsxDEV","BalanceCard","_s","accounts","setAccounts","selectedAccount","setSelectedAccount","balance","setBalance","currency","setCurrency","loading","setLoading","refreshToken","refresh","localStorage","getItem","Error","response","fetch","method","headers","body","JSON","stringify","ok","data","json","setItem","access","error","console","fetchAccounts","token","fetchData","Authorization","status","results","Array","isArray","length","name","fetchAccountBalance","accountName","encodeURIComponent","accountBalance","handleAccountChange","event","newAccount","target","value","sx","padding","textAlign","borderRadius","boxShadow","children","fullWidth","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","map","account","id","variant","color","fontWeight","toLocaleString","_c","$RefreshReg$"],"sources":["/home/edu/edu/repositorios/Budget-app/budget-front/src/components/BalanceCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grid, Paper, Typography, MenuItem, Select, FormControl, InputLabel } from \"@mui/material\";\nimport \"../styles/dashboard.css\";\n\nconst BalanceCard = () => {\n    const [accounts, setAccounts] = useState([]);\n    const [selectedAccount, setSelectedAccount] = useState(\"\");\n    const [balance, setBalance] = useState(null);\n    const [currency, setCurrency] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n\n    const refreshToken = async () => {\n        try {\n            const refresh = localStorage.getItem(\"refresh_token\");\n            if (!refresh) throw new Error(\"No refresh token found!\");\n\n            const response = await fetch(\"http://127.0.0.1:8000/api/v1/auth/token/refresh/\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ refresh }),\n            });\n\n            if (!response.ok) throw new Error(\"Failed to refresh token\");\n\n            const data = await response.json();\n            localStorage.setItem(\"access_token\", data.access);\n            return data.access;\n        } catch (error) {\n            console.error(\"Error refreshing token:\", error);\n            return null;\n        }\n    };\n\n    const fetchAccounts = async () => {\n        let token = localStorage.getItem(\"access_token\");\n\n        const fetchData = async (token) => {\n            return fetch(\"http://127.0.0.1:8000/api/v1/accounts/\", {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n        };\n\n        let response = await fetchData(token);\n\n        if (response.status === 401) {  \n            token = await refreshToken();\n            if (token) {\n                response = await fetchData(token);\n            }\n        }\n\n        if (!response.ok) {\n            console.error(\"Error fetching accounts:\", response.status);\n            setAccounts([]);\n            setLoading(false);\n            return;\n        }\n\n        const data = await response.json();\n        if (data.results && Array.isArray(data.results) && data.results.length > 0) {\n            setAccounts(data.results);\n            setSelectedAccount(data.results[0].name);\n            fetchAccountBalance(data.results[0].name);\n        } else {\n            setAccounts([]);\n        }\n        setLoading(false);\n    };\n\n    const fetchAccountBalance = async (accountName) => {\n        setLoading(true);\n        let token = localStorage.getItem(\"access_token\");\n\n        const fetchData = async (token) => {\n            return fetch(`http://127.0.0.1:8000/api/v1/accounts/balance/${encodeURIComponent(accountName)}/`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n        };\n\n        let response = await fetchData(token);\n\n        if (response.status === 401) {\n            token = await refreshToken();\n            if (token) {\n                response = await fetchData(token);\n            }\n        }\n\n        if (!response.ok) {\n            console.error(\"Error fetching account balance:\", response.status);\n            setLoading(false);\n            return;\n        }\n\n        const data = await response.json();\n        setBalance(data.accountBalance);\n        setCurrency(data.currency);\n        setLoading(false);\n    };\n\n    const handleAccountChange = (event) => {\n        const newAccount = event.target.value;\n        setSelectedAccount(newAccount);\n        fetchAccountBalance(newAccount);\n    };\n\n    useEffect(() => {\n        fetchAccounts();\n    }, []);\n\n    return (\n        <Paper sx={{ padding: 3, textAlign: \"center\", borderRadius: 2, boxShadow: 3 }}>\n            {/* Dropdown Selector */}\n            <FormControl fullWidth sx={{ marginBottom: 2 }}>\n                <InputLabel>Selecciona una cuenta</InputLabel>\n                <Select \n                    value={selectedAccount || \"\"} \n                    onChange={handleAccountChange} \n                    disabled={accounts.length === 0}\n                >\n                    {accounts.length > 0 ? (\n                        accounts.map((account) => (\n                            <MenuItem key={account.id} value={account.name}>\n                                {account.name}\n                            </MenuItem>\n                        ))\n                    ) : (\n                        <MenuItem disabled>No accounts available</MenuItem>\n                    )}\n                </Select>\n            </FormControl>\n\n            {/* Balance Display */}\n            <Typography variant=\"h6\" color=\"primary\">\n                {selectedAccount ? selectedAccount : \"Seleccione una cuenta\"}\n            </Typography>\n            <Typography variant=\"h4\" fontWeight=\"bold\">\n                {loading ? \"Cargando...\" : balance !== null ? `${balance.toLocaleString()} ${currency}` : \"Sin saldo\"}\n            </Typography>\n        </Paper>\n    );\n};\n\nexport default BalanceCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}