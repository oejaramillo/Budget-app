{"ast":null,"code":"var _jsxFileName = \"/home/edu/edu/repositorios/Budget-app/budget-front/src/components/TotalBalanceCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Grid2, Paper, Typography } from \"@mui/material\";\nimport \"../styles/dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TotalBalanceCard = () => {\n  _s();\n  const [balances, setBalances] = useState({\n    total: 0\n  });\n\n  // Token management\n  const refreshToken = async () => {\n    try {\n      const refresh = localStorage.getItem(\"refresh_token\");\n      if (!refresh) throw new Error(\"No refresh token found!\");\n      const response = await fetch(\"http://127.0.0.1:8000/api/v1/auth/token/refresh/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          refresh\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to refresh token\");\n      const data = await response.json();\n      localStorage.setItem(\"access_token\", data.access);\n      console.log(\"Token refreshed:\", data.access);\n      return data.access;\n    } catch (error) {\n      console.error(\"Error refreshing token:\", error);\n      return null;\n    }\n  };\n\n  // Fetching API\n  const fetchBalances = async () => {\n    let token = localStorage.getItem(\"access_token\");\n    const fetchData = async token => {\n      return fetch(\"http://127.0.0.1:8000/api/v1/dashboard/total_balance/\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n    };\n    let response = await fetchData(token);\n\n    // If token is expired, refresh it and retry\n    if (response.status === 401) {\n      token = await refreshToken();\n      if (token) {\n        response = await fetchData(token);\n      }\n    }\n    if (response.ok) {\n      const data = await response.json();\n      setBalances({\n        total: data.totalBalance\n      });\n    } else {\n      console.error(\"Error fetching balance data:\", response.status);\n    }\n  };\n\n  // Fetch data when the component loads\n  useEffect(() => {\n    fetchBalances();\n  }, []);\n\n  // Card styles\n  const cardStyle = {\n    padding: \"20px\",\n    textAlign: \"center\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    background: \"#ffffff\"\n  };\n  return /*#__PURE__*/_jsxDEV(Grid2, {\n    container: true,\n    spacing: 3,\n    children: /*#__PURE__*/_jsxDEV(Grid2, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: cardStyle,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"primary\",\n          children: [\"$\", balances.total.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Balance Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(TotalBalanceCard, \"P+Ds93H03MZCmeMJnsHSZkH0KcU=\");\n_c = TotalBalanceCard;\nexport default TotalBalanceCard;\nvar _c;\n$RefreshReg$(_c, \"TotalBalanceCard\");","map":{"version":3,"names":["React","useEffect","useState","Grid2","Paper","Typography","jsxDEV","_jsxDEV","TotalBalanceCard","_s","balances","setBalances","total","refreshToken","refresh","localStorage","getItem","Error","response","fetch","method","headers","body","JSON","stringify","ok","data","json","setItem","access","console","log","error","fetchBalances","token","fetchData","Authorization","status","totalBalance","cardStyle","padding","textAlign","borderRadius","boxShadow","background","container","spacing","children","item","xs","style","variant","color","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/edu/edu/repositorios/Budget-app/budget-front/src/components/TotalBalanceCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grid2, Paper, Typography } from \"@mui/material\";\nimport \"../styles/dashboard.css\";\n\nconst TotalBalanceCard = () => {\n  const [balances, setBalances] = useState({\n    total: 0\n  });\n\n  // Token management\n  const refreshToken = async () => {\n    try {\n      const refresh = localStorage.getItem(\"refresh_token\");\n      if (!refresh) throw new Error(\"No refresh token found!\");\n\n      const response = await fetch(\"http://127.0.0.1:8000/api/v1/auth/token/refresh/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ refresh }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to refresh token\");\n\n      const data = await response.json();\n      localStorage.setItem(\"access_token\", data.access);  \n      console.log(\"Token refreshed:\", data.access);\n      return data.access;\n    } catch (error) {\n      console.error(\"Error refreshing token:\", error);\n      return null;\n    }\n  };\n\n  // Fetching API\n  const fetchBalances = async () => {\n    let token = localStorage.getItem(\"access_token\");\n\n    const fetchData = async (token) => {\n      return fetch(\"http://127.0.0.1:8000/api/v1/dashboard/total_balance/\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    };\n\n    let response = await fetchData(token);\n\n    // If token is expired, refresh it and retry\n    if (response.status === 401) {\n      token = await refreshToken();\n      if (token) {\n        response = await fetchData(token);\n      }\n    }\n\n    if (response.ok) {\n      const data = await response.json();\n      setBalances({\n        total: data.totalBalance  \n      });\n    } else {\n      console.error(\"Error fetching balance data:\", response.status);\n    }\n  };\n\n  // Fetch data when the component loads\n  useEffect(() => {\n    fetchBalances();\n  }, []);\n\n  // Card styles\n  const cardStyle = {\n    padding: \"20px\",\n    textAlign: \"center\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    background: \"#ffffff\",\n  };\n\n  return (\n    <Grid2 container spacing={3}>\n      <Grid2 item xs={12}>\n        <Paper style={cardStyle}>\n          <Typography variant=\"h5\" color=\"primary\">${balances.total.toLocaleString()}</Typography>\n          <Typography variant=\"subtitle1\">Balance Total</Typography>\n        </Paper>\n      </Grid2>\n    </Grid2>\n  );\n};\n\nexport default TotalBalanceCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}